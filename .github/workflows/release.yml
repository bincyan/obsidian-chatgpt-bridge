name: Release Obsidian Plugin
on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '18.x'
      - name: Get Version
        id: version
        run: echo "::set-output name=tag::$(git describe --abbrev=0)"
      - name: Install jsonnet
        run: |
          sudo apt-get update
          sudo apt-get install -y jsonnet
      - name: Build
        id: build
        run: |
          npm ci
          npm run build-docs --if-present
          npm run build --if-present
      - name: Commit docs
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add docs/openapi.yaml
          if ! git diff --cached --quiet; then
            git commit -m "chore: update openapi.yaml [skip ci]"
            git push origin HEAD:main
          fi
      - name: Package
        run: |
          mkdir "${{ github.event.repository.name }}"
          cp main.js manifest.json styles.css README.md "${{ github.event.repository.name }}"
          zip -r "${{ github.event.repository.name }}.zip" "${{ github.event.repository.name }}"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ github.ref }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload zip file
        id: upload-zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ github.event.repository.name }}.zip
          asset_name: ${{ github.event.repository.name }}-${{ steps.version.outputs.tag }}.zip
          asset_content_type: application/zip
      - name: Upload main.js
        id: upload-main
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./main.js
          asset_name: main.js
          asset_content_type: text/javascript
      - name: Upload manifest.json
        id: upload-manifest
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./manifest.json
          asset_name: manifest.json
          asset_content_type: application/json
      - name: Upload styles.css
        id: upload-css
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./styles.css
          asset_name: styles.css
          asset_content_type: text/css
